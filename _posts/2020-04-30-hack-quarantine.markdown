---
layout: post
title:  How we built the live streaming infrastructure for Hack Quarantine in 10 days
date:   2020-04-30 10:05:55 +0300
image:  /assets/images/blog/hq_1.jpg
author: Will Russell
tags: Digital Hackathons
---

Hack Quarantine was the first event of its kind: a digital hackathon trying to provide the same experiences and memories as an in person hackathon, but being digital. We set out to connect communities all over the world to help build solutions to solve some of the problems surrounding COVID-19.

Hack Quarantine went from an idea to a reality in 10 days. This was unlike anything of its kind, where hackathons normally take months before they can deliver an acceptable experience. With a team of experienced hackathon organisers, everyone already knew the fundamentals of what needed to be done. However, there was still a lot of uncertainty with this being the start of digital student hackathons

Having people host workshops on our live stream would be a great way to connect the community, however we wanted to make sure we could moderate this as we had over 100 requests for workshops all over the world, from people we had never heard before. Giving them access directly to the Twitch channel had too much uncertainty, especially given the size of the event, hitting 3500 people on Discord, and 60,000 unique views on Twitch.

One of the unique things about Hack Quarantine is having so much content on the live stream. Being a 3 week hackathon, a first of its kind, we made it more of an opportunity for people to tune in and learn something new, without having to commit large quantities of time. With the uncertainty of the world at the time, it was unfair to assume people would be able to attend the entire event, which led to us running over such a long period of time. In retrospect, this worked out much better than expected, connecting communities all over the world and sharing the same interest of making the world a better place. The aim was to have workshops, talks, mini games, demos, ceremonies and more on the live stream over the 3 weeks.

With the team having a good background in livestream infrastructure and dynamic graphics, we were able to jump straight into getting it all together in the week we had. When we started, Hack Quarantine didn’t have any branding, making it difficult to build a live stream around it. Will edited our intro video for the opening ceremony, using some custom matrix code. This was to build hype as the event started, especially as none of us knew what to expect. Jon was able to take this, and added a load of extra effects to make it really stand out as the background for our livestream. This included the trails to glow as they fell, really making the livestream stand out. To go along with that, we built an overlay that connected to our Google Calendar that contained the entire schedule. This was also displayed on the website, meaning both were in sync. This allowed us to show what was coming up at the side of sessions, as well as the next event on the holding view. And to top it all off, we had engaging notifications with the currently playing song, and announcements so we could connect with the audience.

Jon worked around the clock to build out our networking infrastructure so we could have workshops and talk speakers connect in using their computers to host sessions live. This ran between 2 of our servers, where one ingested the incoming stream, and the other encoded it to the Hack Quarantine Twitch channel. This allowed us to easily moderate sessions, in case of technical difficulties, like internet connectivity issues on the speakers side or NSFW content.

Dan worked on a custom Discord bot that would distribute Stream Keys to our live workshop/talk hosts, allowing them to connect to our livestream, but only during their slot. As we used Discord to run the event, it only made sense to integrate as much as we could into the platform. Users would receive a unique key well in advance of their slot. An hour before their slot, someone from the team would do a test stream into our server to make sure everything was working, before putting them live. The solution wasn’t perfect, but it was better than any off the shelf solution on the market that allowed speakers the creativity to do whatever they wanted.

Will worked on writing documentation to get people connected, coordinating with the workshop team to make sure everyone was on the same page. This helped give speakers confidence and let them focus on their workshop, delivering a better experience.

To wrap up the workshops, we recorded all the talks so they could be published to YouTube. The Hack Quarantine content team worked around the clock to edit these, removing the stream overlay, adding title cards and adding timestamps so they were easy for people to watch.

Towards the end of the hackathon, we asked people to submit their projects with a short 2 minute video demoing their project. This helps us run judging concurrently, allowing for multiple judges to see a project, while going through a few at a time to help us complete it in 2 days. It’s also pretty common at hackathons for attendees to demo what they’ve worked on. Our community had worked on some incredible projects and we would hate for them to never see the light of day so we looked into a way to demo all of them. We had over 250 submissions, creating over 8 hours of demo videos! This is way more than any hackathon I’ve ever been to, meaning we needed to think of a new way to tackle this. The content team were able to add title cards to every video, then Hack Productions was able to take those and play them back to back, creating our Demofest! We actually ran demofest several times, to include as many different time zones as possible, giving everyone the opportunity to tune in.

Hack Quarantine was a monster of an event, but we delivered an incredible experience to all involved. The team worked behind the clock to get content on the Hack Quarantine livestream. We had over 70 talks in the end, with some being live and others being pre recorded.
